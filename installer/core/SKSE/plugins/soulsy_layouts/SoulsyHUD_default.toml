# The default layout that ships with SoulsyHUD.
#
# All SoulsyHUD layouts are written in TOML. To learn more about TOML,
# visit its official website: https://toml.io/

# Global scaling factor: the whole hud size changes when you change this.
global_scale = 1.0

# A named location for the HUD. Use this as a shortcut for common anchor
# points. These work no matter what the player's screen resolution is, because this
# is turned into a location point at run-time.
# Values: bottom_left, bottom_right, top_left, top_right, center,
# center_top, center_bottom, left_center, right_center
anchor_name = "bottom_left"

# You can also specify the anchor point like this if a named anchor point
# doesn't work for your layout. These values are NOT scaled.
#anchor = { x = 2100.0, y = 825.0 }

# The size of the hud, before the global scaling factor is applied.
size = { x = 300.0, y = 300.0 }

# Only draw the ammo slot when a weapon that uses ammo (ranged) is equipped.
hide_ammo_when_irrelevant = true
# Hide the left hand slot when a ranged weapon is equipped. This lets you
# use the same location as the left hand to show ammo.
hide_left_when_irrelevant = true

# Typeface to use. Must be truetype. Must be in resources/fonts.
font = "futura-book-bt.ttf"
# A font sizing hint to the font loader about what size most of the text will use.
# Text rendered at this size will look best. This value is scaled before the font is loaded.
# Text alignment calculations are made using this font size.
font_size = 20.0

# Enable any of these you need text rendering for.
# You will need to supply a true-type font with the glyphs; futura doesn't have them.
# The "Inter" font packaged with the i18 layout does have them.
chinese_full_glyphs = false
simplified_chinese_glyphs = false
cyrillic_glyphs = false
japanese_glyphs = false
korean_glyphs = false
thai_glyphs = false
vietnamese_glyphs = false

# ---------- BACKGROUND
# An optional background image. If your layout doesn't have an overall background, you
# can safely leave this out. All background elements look like this.
[background]
# This is the file name of an SVG that must be in resources/backgrounds.
# You can supply a different image with your layout and either overwrite the default
# image or give it a new name that you use here.
svg = "hud_bg.svg"
# The size to draw the image.
size = { x = 300.0 , y = 300.0}
# The color to use to draw this slot's background. Alpha of 0 means it's not visible.
# Color is expressed as RGBA; values are 0-255.
color = { r = 0, g = 0, b = 0, a = 64 }

# ---------- SHOUTS & POWERS
[power]

# The offset of the center of this slot relative to the center of the HUD.
# This gets scaled when the global scaling factor is applied.
offset = { x = 0.0, y = -83.0 }

# Optional slot background image: if not present, not drawn. You can have
# different background images for different slots if you like. The background
# is always drawn in the exact center of the slot.
[power.background]
# This is the image drawn in the background. It can be different for
# every slot.
svg = "slot_bg.svg"
# Size of this background image, before scaling.
size = { x = 100.0 , y = 100.0}
# Color to use to draw the background image. While it will be invisible
# if you set the alpha to 0, it's better to omit this section entirely if
# you don't want to draw a background image.
color = { r = 255, g = 255, b = 255, a = 128 }

# The icon element of this slot. This element is *not* optional.
[power.icon]
# Color for this HUD's icon. Alpha of 0 means it's not drawn. The icon is
# always centered in the slot.
color = { r = 200, g = 200, b = 200, a = 255 }
# Size of the icon for this slot, before scaling.
size = { x = 46.0, y = 46.0 }
# Where to draw the icon, relative to the center of the slot.
offset = { x = 0.0, y = 0.0 }

# Optional display for the slot's hotkey.
[power.hotkey]
# Size before scaling.
size = { x = 30.0, y = 30.0 }
# Where to draw the hotkey. Gets scaled.
offset = { x = 0.0, y = 60.0 }
# color for drawing the hotkey's image
color = { r = 255, g = 255, b = 255, a = 255 }
# An optional background image for the hotkey. You can leave this out to not
# draw a background for the hotkey display. For this layout, we don't draw it.
#[power.hotkey.background]
#svg = "key_bg.svg"
#size = { x = 30.0 , y = 30.0}
#color = { r = 255, g = 255, b = 255, a = 128 }

# An array of text elements for this slot. You can have as many
# as you want, but each one costs time to draw so use them wisely.
# The text can include values filled in from the item's info.
# (TOML hint: double square brackets around a category means you can
# have more than one of them.)
[[power.text]]
offset = { x = 110.0, y = 110.0 }
color = { r = 255, g = 255, b = 255, a = 255 }
font_size = 20.0
# How to align name and count text for this text element.
# IMPORTANT DOCUMENTATION! The options are left, right, center.
# Text alignment is, for cognitive ease reasons, also a statement about
# where the stated anchor point is.
# Center alignment: the offset refers to the center of the text box.
# Left alignment: the offset refers to the center of the left edge.
# Right alignment: the offset refers to the center of the right edge.
alignment = "left"
# The contents of the text to draw. This can be fixed text, e.g.,
#     contents = "Hello, world!"
# or it can substitute in values from the item shown in the slot.
# To fill in a value, use it with curly braces, like this
# example, which draws the name of the item shown. You can use more
# than one.
# Possible values: count, name, kind,
contents = "{name}"


# ---------- UTILITIES AND CONSUMABLES
# The consumables slot. You can change all of these values
# independently from the other slots.
[utility]
offset = { x = 0.0, y = 83.0 }

[utility.background]
svg = "slot_bg.svg"
size = { x = 100.0 , y = 100.0 }
color = { r = 255, g = 255, b = 255, a = 128 }

[utility.icon]
color = { r = 200, g = 200, b = 200, a = 255 }
size = { x = 46.0, y = 46.0 }
offset = { x = 0.0, y = 0.0 }

[utility.hotkey]
color = { r = 255, g = 255, b = 255, a = 255 }
size = { x = 30.0, y = 30.0 }
offset = { x = 0.0, y = -60.0 }

[[utility.text]]
alignment = "left"
offset = { x = 65.0, y = -4.0 }
color = { r = 255, g = 255, b = 255, a = 255 }
font_size = 20.0
# This text element has two variables substituted in.
contents = "{count} {name}"

# ---------- LEFT HAND
[left]
offset = { x = -83.0, y = 0.0 }

[left.background]
svg = "slot_bg.svg"
size = { x = 100.0 , y = 100.0 }
color = { r = 255, g = 255, b = 255, a = 128 }

[left.icon]
color = { r = 200, g = 200, b = 200, a = 255 }
size = { x = 46.0, y = 46.0 }
offset = { x = 0.0, y = 0.0 }

[left.hotkey]
color = { r = 255, g = 255, b = 255, a = 255 }
offset = { x = 60.0, y = 0.0 }
size = { x = 30.0, y = 30.0 }

[left.poison]
offset = { x = 0.0, y = -40.0 }
[left.poison.indicator]
svg = "../icons/indicator_poison.svg"
size = { x = 17.0, y = 17.0 }
color = {r = 160, g = 240, b = 2, a = 255 }

[[left.text]]
offset = { x = 125.0, y = 107.0 }
color = { r = 255, g = 255, b = 255, a = 255 }
font_size = 20.0
alignment = "left"
contents = "{name}"

[left.meter]
angle  = 90
offset = { x = 65.0, y = 0.0 }
[left.meter.background]
color = { r = 255, g = 255, b = 255, a = 255 }
size  = { x = 100.0, y = 20.0 }
svg   = "meter_bar_empty.svg"
[left.meter.filled]
color = { r = 80, g = 0, b = 145, a = 255 }
size  = { x = 98.0, y = 16.0 }
svg   = "meter_bar_filled.svg"


# ---------- RIGHT HAND
[right]
offset = { x = 83.0, y = 0.0 }

[right.background]
svg = "slot_bg.svg"
size = { x = 100.0 , y = 100.0 }
color = { r = 255, g = 255, b = 255, a = 128 }

[right.icon]
color = { r = 200, g = 200, b = 200, a = 255 }
size = { x = 46.0, y = 46.0 }
offset = { x = 0.0, y = 0.0 }

[right.hotkey]
color = { r = 255, g = 255, b = 255, a = 255 }
offset = { x = -60.0, y = 0.0 }
size = { x = 30.0, y = 30.0 }

[right.poison]
offset = { x = 0.0, y = -40.0 }
[right.poison.indicator]
svg = "../icons/indicator_poison.svg"
size = { x = 17.0, y = 17.0 }
color = {r = 160, g = 240, b = 2, a = 255 }

[[right.text]]
color = { r = 255, g = 255, b = 255, a = 255 }
offset = { x = 10.0, y = 52.0 }
font_size = 20.0
alignment = "left"
contents = "{name}"

[right.meter]
# What angle to draw the image at, an integer from 0 to 360.
# 0 is horizontal. >
# 90 is rotated counter-clockwise 90° to vertical.  ^
# The meter is presumed to fill from LEFT to RIGHT before rotation.
# Rotating 90° makes it fill from bottom to top.
# Rotating 180° makes it fill from right to left. Etc.  <
angle = 90
# An offset for the CENTER of the meter, from the center of the slot.
# The meter is rotated around this point. You should play with the offset
# until it looks correct for your chosen rotation.
offset = { x = 65.0, y = 0.0 }
# How to draw the empty part of the meter, or any decoration around the meter.
[right.meter.background]
# This size is the size of the image before rotation!
size = { x = 100.0, y = 20.0 }
# The SVG file to use for the progress bar. This should like in the
# `resources/backgrounds` folder. You can reference another folder with
# `../icons/file_in_icons_dir.svg` if you need to.
svg = "meter_bar_empty.svg"
# The color for the background, or empty part, of the meter.
color = { r = 255, g = 255, b = 255, a = 255 }
[right.meter.filled]
# You can leave the filled svg empty if you want. If you do this, the
# filled portion of the meter will re-use the background image, but
# shortened to indicate the percentage of the meter that's filled.
# E.g., 50% full would be half the length.
svg = "meter_bar_filled.svg"
# The size of the filled meter when the charge/fuel/whatever is at max.
size = { x = 100.0, y = 20.0 }
# The color for the filled part of the meter.
color = { r = 80, g = 0, b = 145, a = 255 }

# ---------- AMMO
# This layout swaps ammo in for the left hand when a ranged
# weapon is equipped, so it's in the same position as the left
# hand slot.
[ammo]
offset = { x = -83.0, y = 0.0 }
[ammo.background]
svg = "slot_bg.svg"
size = { x = 100.0 , y = 100.0 }
color = { r = 255, g = 255, b = 255, a = 128 }
[ammo.icon]
color = { r = 200, g = 200, b = 200, a = 255 }
size = { x = 46.0, y = 46.0 }
offset = { x = 0.0, y=0.0 }
[ammo.hotkey]
color = { r = 255, g = 255, b = 255, a = 255 }
offset = { x = 60.0, y = 0.0 }
size = { x = 30.0, y = 30.0 }
[[ammo.text]]
alignment = "left"
color = { r = 255, g = 255, b = 255, a = 255 }
font_size = 20.0
offset = { x = 125.0, y = 107.0 }
contents = "{count} {name}"


# ---------- EQUIPSET
# This entire slot is optional.
[equipset]
offset = { x = 83.0, y = -83.0 }
[equipset.icon]
color = { r = 200, g = 200, b = 200, a = 255 }
size = { x = 46.0, y = 46.0 }
offset = { x = 0.0, y=0.0 }
[equipset.hotkey]
color = { r = 255, g = 255, b = 255, a = 255 }
offset = { x = 60.0, y = -10.0 }
size = { x = 30.0, y = 30.0 }
[[equipset.text]]
alignment = "left"
offset = { x = 50.0, y = 5.0 }
color = { r = 255, g = 255, b = 255, a = 255 }
font_size = 20.0
contents = "{name}"
